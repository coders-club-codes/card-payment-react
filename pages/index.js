import {
  Elements,
  useElements,
  useStripe,
  CardElement,
} from '@stripe/react-stripe-js';
import { loadStripe } from '@stripe/stripe-js';
import Axios from 'axios';
import Head from 'next/head';
import { useState, useCallback, useEffect } from 'react';
import styles from '../styles/Home.module.css';

const stripePromise = loadStripe('SUA_CHAVE_PUBLISHABLE');

function Home({ intent }) {
  const stripe = useStripe();
  const elements = useElements();

  const handleSubmit = useCallback(
    async (event) => {
      try {
        event.preventDefault();

        if (!stripe || !elements) {
          return;
        }

        const cardElement = elements.getElement(CardElement);

        const result = await stripe.confirmCardPayment(intent.client_secret, {
          payment_method: {
            card: cardElement,
            billing_details: {
              name: 'Levir',
            },
          },
        });

        console.log(result);
      } catch (error) {
        console.log(error);
      }
    },
    [stripe, elements]
  );

  return (
    <form className={styles.container} onSubmit={handleSubmit}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className={styles.card}>
        <div>
          <div className={styles.priceCard}>
            <h3>De 1000,00</h3>
            <h3>Por 500,00</h3>
          </div>

          <CardElement className={styles.input} />

          <div>
            <button className={styles.button} type="submit">
              Comprar
            </button>
          </div>
        </div>
      </div>
    </form>
  );
}

export default function HomeWrapper() {
  const [intent, setIntent] = useState();

  useEffect(() => {
    async function loadIntent() {
      const { data } = await Axios.post('/api/intent');

      setIntent(data);
    }
    loadIntent();
  }, []);

  return !intent ? (
    <div className={styles.container}>Loading</div>
  ) : (
    <Elements
      stripe={stripePromise}
      options={{ clientSecret: intent.client_secret }}
    >
      <Home intent={intent} />
    </Elements>
  );
}
